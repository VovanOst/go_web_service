// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type AddToCartInput struct {
	ItemID   string `json:"itemID"`
	Quantity int    `json:"quantity"`
}

// CartItem - сущность элемента корзины
type CartItem struct {
	// ID товара, который надо добавить в корзину
	Item *Item `json:"item"`
	// Количество товаров данного типа в корзине
	Quantity int `json:"quantity"`
}

type Catalog struct {
	// ID каталога
	ID int `json:"id"`
	// Название раздела каталога
	Name string `json:"name"`
	// Родительский раздел
	Parent *Catalog `json:"parent"`
	// Дочерние разделы
	Childs []*Catalog `json:"childs"`
	// Товары в разделе
	Items []*Item `json:"items"`
}

type Item struct {
	// ID товара
	ID int `json:"id"`
	// Имя товара
	Name string `json:"name"`
	// Родительский каталог
	Parent *Catalog `json:"parent"`
	// Сущность продавец
	Seller *Seller `json:"seller"`
	// Количесто товара в корзине у пользователя
	InCart int `json:"inCart"`
	// Остаток на складе
	Stock int `json:"stock"`
	// Текст, сколько осталось на складе (<=1 - мало; >=2 && <=3 - хватает; >3 - много)
	InStockText string `json:"inStockText"`
}

type Mutation struct {
}

type NewTodo struct {
	Text   string `json:"text"`
	UserID string `json:"userId"`
}

type Query struct {
}

type RemoveFromCartInput struct {
	ItemID   string `json:"itemID"`
	Quantity int    `json:"quantity"`
}

type Seller struct {
	// ID продавца
	ID int `json:"id"`
	// Имя продавца
	Name string `json:"name"`
	// Количество сделок у продавца (берется из testdata.json)
	Deals int `json:"deals"`
	// Товары продавца
	Items []*Item `json:"items"`
}

type Todo struct {
	ID   string `json:"id"`
	Text string `json:"text"`
	Done bool   `json:"done"`
	User *User  `json:"user"`
}

type User struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}
